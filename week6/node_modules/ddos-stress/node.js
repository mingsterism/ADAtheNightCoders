#!/usr/bin/env node
/*
 * DDoS Stress
 * https://github.com/mlazarov/ddos-stress
 *
 * Copyright (c) 2015, Martin Lazarov
 * Licensed under the MIT license.
 */

/**
 * Module dependencies.
 */

var dnode = require('dnode'),
    stress = require('./'),
    config = require('./etc/config'),
    ddos = new stress(),
    lastStats = {
        errors: 0,
        success: 0
    };

/**
 * Connect to the dnode Server
 */

var d = dnode({
    run: function (url, concurent){
        ddos.runningState = true;
        lastStats = {errors:0,success:0};
        ddos.resetStats();
        ddos.run(url,concurent);
        console.log('DDoS started');
    },
    stop: function (){
        console.log("Terminating DDoS");
        ddos.runningState = false;
    }
}).connect(config.server,config.port, function(remote,conn){
    console.log('=> We are connected to the server! Waiting for new task ...');

    function reqStats(){
        if(ddos.runningState){
            // Compute the stats from last run of reqStats();
	    newStats = {errors:0,success:0};
            newStats.errors = ddos.stats.errors - lastStats.errors;
            newStats.success= ddos.stats.success - lastStats.success;
            lastStats.errors = ddos.stats.errors;
            lastStats.success = ddos.stats.success;
            console.log(lastStats,ddos.stats);
            remote.stats(newStats);
        }
        stats = setTimeout(reqStats,1000);
    }
    var stats = setTimeout(reqStats,1000);
});


/**
 * Catch errors
 */

d.on('error', function(err){
    console.log(err.toString());
});

d.on('fail', function(err){
    console.log(err);
});

d.on('end', function(err){
    console.log("=> Connection to the server closed");
});

